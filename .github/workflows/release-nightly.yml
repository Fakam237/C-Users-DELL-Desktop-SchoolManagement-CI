name: Release (golang.go-nightly)

# Daily release on 15:00 UTC, monday-thursday.
# Or, force to release by triggering repository_dispatch events by using
#   curl -v -H "Accept: application/vnd.github.everest-preview+json" -H "Authorization: token ${GITHUB_TOKEN}" https://api.github.com/repos/golang/vscode-go/dispatches -d '{ "event_type": "force-release" }'
on:
  schedule:
    - cron: "0 15 * * MON-THU"  # 15 UTC, monday-thursday daily
  repository_dispatch:
    types: [force-release]

jobs:
  release:
    if: github.ref == 'refs/heads/master' && github.repository == 'golang/vscode-go'

    name: Release Nightly
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'

      - name: Setup Go
        uses: actions/setup-go@v2
        with:
         go-version: '1.15'

      - name: Install dependencies
        run: npm ci

      - name: Prepare Release
        run: build/all.bash prepare_nightly

      - name: Compile
        run: npm run vscode:prepublish

      # TODO: use prerelease versions of tools (how? or master?)

      - name: Install Go tools (Modules mode)
        run: |
            go version
            go get github.com/acroca/go-symbols
            go get github.com/davidrjenni/reftools/cmd/fillstruct
            go get github.com/haya14busa/goplay/cmd/goplay

            # Install two versions of gocode (one as gocode-gomod)
            go get github.com/stamblerre/gocode
            mv "${HOME}/go/bin/gocode${{env.EXT}}" "${HOME}/go/bin/gocode-gomod${{env.EXT}}"
            go get github.com/mdempsky/gocode

            go get github.com/sqs/goreturns
            go get github.com/uudashr/gopkgs/v2/cmd/gopkgs
            go get github.com/zmb3/gogetdoc
            go get honnef.co/go/tools/...
            go get golang.org/x/tools/cmd/gorename
            go get golang.org/x/tools/gopls
            go get github.com/cweill/gotests/...
            go get github.com/rogpeppe/godef
            go get github.com/ramya-rao-a/go-outline
            go get github.com/go-delve/delve/cmd/dlv@master
            cp "${HOME}/go/bin/dlv${{env.EXT}}" "${HOME}/go/bin/dlv-dap${{env.EXT}}"

        env:
          GO111MODULE: on
          EXT: "${{ matrix.os == 'windows-latest' && '.exe' || ''}}"

      - name: Run unit tests
        run: npm run unit-test

      - name: Run tests
        uses: GabrielBB/xvfb-action@v1.0
        with:
          run: npm run test
        env:
          CODE_VERSION: 'insiders'
          VSCODEGO_BEFORE_RELEASE_TESTS: true

      - name: Publish
        if: github.ref == 'refs/heads/master' && github.repository == 'golang/vscode-go'
        uses: lannonbr/vsce-action@704da577da0f27de5cdb4ae018374c2f08b5f523
        with:
          args: "publish -p $VSCE_TOKEN"
        env:
          VSCE_TOKEN: ${{ secrets.VSCE_TOKEN }}
- name: Upload a Build Artifact
  uses: actions/upload-artifact@v2.2.2
  with:
    # Artifact name
    name: # optional, default is artifact
    # A file, directory or wildcard pattern that describes what to upload
    path: 
    # The desired behavior if no files are found using the provided path.
Available Options:
  warn: Output a warning but do not fail the action
  error: Fail the action with an error message
  ignore: Do not output any warnings or errors, the action does not fail

    if-no-files-found: # optional, default is warn
    # Duration after which artifact will expire in days. 0 means using default retention.
Minimum 1 day. Maximum 90 days unless changed from the repository settings page.

    retention-days: # optional
    - name: Setup Go environment
  uses: actions/setup-go@v2.1.2
  with:
    # The Go version to download (if necessary) and use. Supports semver spec and ranges.
    go-version: # optional
    # Whether to download only stable versions
    stable: # optional, default is true
    # Used to pull node distributions from go-versions.  Since there's a default, this is typically not supplied by the user.
    token: # optional, default is ${{ github.token }}
    - name: Setup Java JDK
  uses: actions/setup-java@v1.4.3
  with:
    # The Java version to make available on the path. Takes a whole or semver Java version, or 1.x syntax (e.g. 1.8 => Java 8.x). Early access versions can be specified in the form of e.g. 14-ea, 14.0.0-ea, or 14.0.0-ea.28
    java-version: 
    # The package type (jre, jdk, jdk+fx)
    java-package: # optional, default is jdk
    # The architecture (x86, x64) of the package.
    architecture: # optional, default is x64
    # Path to where the compressed JDK is located. The path could be in your source repository or a local path on the agent.
    jdkFile: # optional
    # ID of the distributionManagement repository in the pom.xml file. Default is `github`
    server-id: # optional, default is github
    # Environment variable name for the username for authentication to the Apache Maven repository. Default is $GITHUB_ACTOR
    server-username: # optional, default is GITHUB_ACTOR
    # Environment variable name for password or token for authentication to the Apache Maven repository. Default is $GITHUB_TOKEN
    server-password: # optional, default is GITHUB_TOKEN
    # Path to where the settings.xml file will be written. Default is ~/.m2.
    settings-path: # optional
    # GPG private key to import. Default is empty string.
    gpg-private-key: # optional
    # Environment variable name for the GPG private key passphrase. Default is $GPG_PASSPHRASE.
    gpg-passphrase: # optional
    - name: Setup .NET Core SDK
  uses: actions/setup-dotnet@v1.7.1
  with:
    # SDK version to use. Examples: 2.2.104, 3.1, 3.1.x
    dotnet-version: # optional
    # Optional package source for which to set up authentication. Will consult any existing NuGet.config in the root of the repo and provide a temporary NuGet.config using the NUGET_AUTH_TOKEN environment variable as a ClearTextPassword
    source-url: # optional
    # Optional OWNER for using packages from GitHub Package Registry organizations/users other than the current repository's owner. Only used if a GPR URL is also provided in source-url
    owner: # optional
    # Optional NuGet.config location, if your NuGet.config isn't located in the root of the repo.
    config-file: # optional
    - name: First interaction
  uses: actions/first-interaction@v1.1.0
  with:
    # Token for the repository. Can be passed in using {{ secrets.GITHUB_TOKEN }}
    repo-token: 
    # Comment to post on an individual's first issue
    issue-message: # optional
    # Comment to post on an individual's first pull request
    pr-message: # optional
    - name: Push To Registry
  # You may pin to the exact commit or the version.
  # uses: redhat-actions/push-to-registry@ae3d342a76e2aae137c01983f516e30f29b23c78
  uses: redhat-actions/push-to-registry@v2
  with:
    # Name of the image to push
    image: 
    # The tag or tags of the image to push. For multiple tags, seperate by a space. For example, "latest v1"
    tags: # optional, default is latest
    # Registry where to push the image (eg. quay.io/username)
    registry: 
    # Username to use as credential to authenticate to the registry
    username: 
    # Password to use as credential to authenticate to the registry
    password: 
    # Verify TLS certificates when contacting the registry
    tls-verify: # optional, default is true
    # After copying the image, write the digest of the resulting image to the file.
By default, the filename will be determined from the image and tag.
The contents of this file are the digest output.

    digestfile: # optional
    # Extra args to be passed to podman push.
Separate arguments by newline. Do not use quotes - @actions/exec will do the quoting for you.

    extra-args: # optional
    - name: Pachyderm Pipeline Updater
  # You may pin to the exact commit or the version.
  # uses: pachyderm/pachyderm-actions@69c4694668a732392b203fab5b8dbdc14b8a097c
  uses: pachyderm/pachyderm-actions@0.0.1
  - name: Trigger Buildkite Pipeline
  # You may pin to the exact commit or the version.
  # uses: buildkite/trigger-pipeline-action@d03b6f2760252274dc019e1298095c3b61baeaf8
  uses: buildkite/trigger-pipeline-action@v1.2.0
  - name: Disconnect Server
  # You may pin to the exact commit or the version.
  # uses: parasoft/disconnect-server-action@79875cecfbe3bb0c23dc6019d2c8e2bd469b1dcf
  uses: parasoft/disconnect-server-action@1.0.1
  with:
    # CTP URL
    ctpUrl: 
    # CTP Username
    ctpUsername: 
    # CTP Password
    ctpPassword: 
    # Used to specify server by host or name
    serverMatch: 
    # Host or name of the server
    server: 
    - name: Knative Service Manager
  # You may pin to the exact commit or the version.
  # uses: redhat-actions/kn-service-manager@9d456952c2b59c36db2bb2b83adfa983b1c787a4
  uses: redhat-actions/kn-service-manager@v1
  with:
    # The Knative Service Name
    service_name: 
    # The Kubernetes Namespace to deploy to. Defaults to current context's namespace.
    namespace: # optional
    # The Knative service command, accepted commands are create, update, apply and delete
    command: # optional, default is create
    # The Knative Service Image
    container_image: 
    # Any extra arguments to append to the kn <command>
    kn_extra_args: # optional
    # The registry user to use to create the image pull secret
    registry_user: # optional
    # The registry user password
    registry_password: # optional
    # "Pass --force to kn create. If the service already exists,
the service will be replaced, instead of kn create failing.
This input has no effect if command is not create"

    force_create: # optional, default is false
    - name: Codefresh pipeline runner
  # You may pin to the exact commit or the version.
  # uses: codefresh-io/codefresh-pipeline-runner@c563a2bb98a7b8522192aaabf79ee9504141f8dc
  uses: codefresh-io/codefresh-pipeline-runner@v7
  with:
    # codefresh cli build variables, see https://codefresh-io.github.io/cli/pipelines/run-pipeline/#setting-variables-through-the-command for more information.
    args: # optional
    - name: Veracode Upload And Scan
  # You may pin to the exact commit or the version.
  # uses: veracode/veracode-uploadandscan-action@c5e63c8383debb26a0d48250eab75d94327635ba
  uses: veracode/veracode-uploadandscan-action@0.2.1
  with:
    # appname
    appname: # default is ${{ github.repository }}
    # createprofile
    createprofile: # default is true
    # filepath
    filepath: 
    # version
    version: # default is Scan from Github job: ${{ github.run_id }}
    # vid
    vid: 
    # vkey
    vkey: 
    # true or flase
    createsandbox: # optional
    # name of the sandbox
    sandboxname: # optional
    # wait X minutes for the scan to complete
    scantimeout: # optional
    # modules to exclude from module selection
    exclude: # optional
    # modules to include in module selection
    include: # optional
    # business criticality - policy selection
    criticality: # optional
    # filename pattern
    pattern: # optional
    # replacement
    replacement: # optional
    # replacement
    sandboxid: # optional
    # All top level modules
    scanallnonfataltoplevelmodules: # optional
    # platform selected modules
    selected: # optional
    # selected modules like from previous scan
    selectedpreviously: # optional
    # teams
    teams: # optional
    # teams
    toplevel: # optional
    - name: Buildah Build
  # You may pin to the exact commit or the version.
  # uses: redhat-actions/buildah-build@54ff9945b9f9320e460006b5ea63dfac279906b0
  uses: redhat-actions/buildah-build@v2.2
  with:
    # The name (reference) of the image to build
    image: 
    # The tags of the image to build. For multiple tags, seperate by a space. For example, "latest v1".
    tags: # optional, default is latest
    # The base image to use to create a new container image
    base-image: # optional
    # List of Dockerfile paths (eg: ./Dockerfile)
    dockerfiles: # optional
    # Path of the directory to use as context (default: .)
    context: # optional, default is .
    # List of files/directories to copy inside the base image
    content: # optional
    # The entry point to set for containers based on image
    entrypoint: # optional
    # The port to expose when running containers based on image
    port: # optional
    # The working directory to use within the container
    workdir: # optional
    # List of environment variables to be set when running containers based on image
    envs: # optional
    # List of --build-args to pass to buildah
    build-args: # optional
    # Set to true to build using the OCI image format instead of the Docker image format
    oci: # optional, default is false
    # Architecture(s) to build the image(s) for. For multiple architectures,
separate by a comma.

    archs: # optional, default is amd64
    - name: Disconnect Server
  # You may pin to the exact commit or the version.
  # uses: parasoft/disconnect-server-action@79875cecfbe3bb0c23dc6019d2c8e2bd469b1dcf
  uses: parasoft/disconnect-server-action@1.0.1
  with:
    # CTP URL
    ctpUrl: 
    # CTP Username
    ctpUsername: 
    # CTP Password
    ctpPassword: 
    # Used to specify server by host or name
    serverMatch: 
    # Host or name of the server
    server: 
    - name: Source to Image Build
  # You may pin to the exact commit or the version.
  # uses: redhat-actions/s2i-build@cb2d509e7af1dac178c5cd5bda46b6b043badc72
  uses: redhat-actions/s2i-build@v1.1.1
  with:
    # The location of the s2i builder image.
    builder_image: 
    # The Name of the image to build
    image_name: 
    # The version of the image to build
    image_tag: # optional, default is latest
    # The location of the path to run s2i from
    path_context: # optional, default is .
    # Log level when running the S2I
    log_level: # optional, default is 1
    # List of environment variable key-value pairs to pass to the s2i builder context
    env_vars: # optional
    - name: Vault Secrets
  # You may pin to the exact commit or the version.
  # uses: hashicorp/vault-action@5e5c06a3c8e96b7c4757fe7a10e03469cdbd07bb
  uses: hashicorp/vault-action@v2.1.2
  with:
    # The URL for the vault endpoint
    url: 
    # A semicolon-separated list of secrets to retrieve. These will automatically be converted to environmental variable keys. See README for more details
    secrets: 
    # The Vault namespace from which to query secrets. Vault Enterprise only, unset by default
    namespace: # optional
    # The method to use to authenticate with Vault.
    method: # optional, default is token
    # The Vault Token to be used to authenticate with Vault
    token: # optional
    # The Role Id for App Role authentication
    roleId: # optional
    # The Secret Id for App Role authentication
    secretId: # optional
    # The Github Token to be used to authenticate with Vault
    githubToken: # optional
    # The JSON payload to be sent to Vault when using a custom authentication method.
    authPayload: # optional
    # A string of newline separated extra headers to include on every request.
    extraHeaders: # optional
    # Whether or not export secrets as environment variables.
    exportEnv: # optional, default is true
    # Whether or not export Vault token as environment variables.
    exportToken: # optional, default is false
    # Base64 encoded CA certificate to verify the Vault server certificate.
    caCertificate: # optional
    # Base64 encoded client certificate for mTLS communication with the Vault server.
    clientCertificate: # optional
    # Base64 encoded client key for mTLS communication with the Vault server.
    clientKey: # optional
    # When set to true, disables verification of the Vault server certificate.  Setting this to true in production is not recommended.
    tlsSkipVerify: # optional, default is false
    - name: Veracode Static Analysis Pipeline Scan and SARIF import
  # You may pin to the exact commit or the version.
  # uses: veracode/veracode-pipeline-scan-results-to-sarif@c4e3ac33a116df4b7074d53747d8814e8fdf974b
  uses: veracode/veracode-pipeline-scan-results-to-sarif@v0.1.5
  with:
    # location of the pipeline json result file
    pipeline-results-json: # default is results.json
    # the path to the SARIF file as an output of the transformation
    output-results-sarif: # default is veracode-results.sarif
    # a path prefix conversion before publish in the SARIF file
    source-base-path-1: # optional, default is 
    # a path prefix conversion before publish in the SARIF file
    source-base-path-2: # optional, default is 
    # a path prefix conversion before publish in the SARIF file
    source-base-path-3: # optional, default is 
    # The conversion rule of Veracode findings to GitHub level
    finding-rule-level: # default is 4:3:0
    - name: Docker Setup Buildx
  # You may pin to the exact commit or the version.
  # uses: docker/setup-buildx-action@154c24e1f33dbb5865a021c99f1318cfebf27b32
  uses: docker/setup-buildx-action@v1.1.1
  with:
    # Buildx version. (eg. v0.3.0)
    version: # optional
    # Sets the builder driver to be used
    driver: # optional, default is docker-container
    # List of additional driver-specific options. (eg. image=moby/buildkit:master)
    driver-opts: # optional
    # Flags for buildkitd daemon
    buildkitd-flags: # optional, default is --allow-insecure-entitlement security.insecure --allow-insecure-entitlement network.host
    # Sets up docker build command as an alias to docker buildx
    install: # optional, default is false
    # Switch to this builder instance
    use: # optional, default is true
    # Optional address for docker socket or context from `docker context ls`
    endpoint: # optional
    - name: Docker Setup QEMU
  # You may pin to the exact commit or the version.
  # uses: docker/setup-qemu-action@6520a2d2cb6db42c90c297c8025839c98e531268
  uses: docker/setup-qemu-action@v1.0.1
  with:
    # QEMU static binaries Docker image (e.g. tonistiigi/binfmt:latest)
    image: # optional, default is tonistiigi/binfmt:latest
    # Platforms to install (e.g. arm64,riscv64,arm)
    platforms: # optional, default is all
    - name: Deploy to Cloudflare Workers with Wrangler
  # You may pin to the exact commit or the version.
  # uses: cloudflare/wrangler-action@21f14faa062c33c938e3f37c30d52021bed521cb
  uses: cloudflare/wrangler-action@1.2.0
  with:
    # (Legacy) Your Cloudflare API Key
    apiKey: # optional
    # Your Cloudflare API Token
    apiToken: # optional
    # (Legacy) Your Cloudflare Email
    email: # optional
    # The environment you'd like to publish your Workers project to - must be defined in wrangler.toml
    environment: # optional
    # The relative path which Wrangler commands should be run from
    workingDirectory: # optional
    # The version of Wrangler you'd like to use to publish your Workers project
    wranglerVersion: # optional
    # A new line deliminated string of environment variable names that should be configured as Worker secrets
    secrets: # optional
    - name: Amazon ECR "Login" Action for GitHub Actions
  # You may pin to the exact commit or the version.
  # uses: aws-actions/amazon-ecr-login@aaf69d68aa3fb14c1d5a6be9ac61fe15b48453a2
  uses: aws-actions/amazon-ecr-login@v1
  with:
    # A comma-delimited list of AWS account IDs that are associated with the ECR registries. If you do not specify a registry, the default ECR registry is assumed.
    registries: # optional
    # Whether to skip explicit logout of the registries during post-job cleanup. Exists for backward compatibility on self-hosted runners. Not recommended.
    skip-logout: # optional
    - name: Refactr - Run Pipeline
  # You may pin to the exact commit or the version.
  # uses: refactr/action-run-pipeline@b039f90de9de97a665e53c5969dc76012f349064
  uses: refactr/action-run-pipeline@v0.1.2
  with:
    # API token
    api_token: 
    # Project ID
    project_id: 
    # Job ID
    job_id: 
    # Variables
    variables: # optional
    # Refactr API base URL
    api_url: # optional
    - name: Git Version
  # You may pin to the exact commit or the version.
  # uses: codacy/git-version@fa06788276d7492a2af01662649696d249ecf4cb
  uses: codacy/git-version@2.4.0
  with:
    # The name of the release branch
    release-branch: # default is master
    # The name of the dev branch
    dev-branch: # default is dev
    # The prefix to use in the version
    prefix: # optional
    # The paths to be used to calculate changes (comma-separated)
    log-paths: # optional, default is ./
    - name: Setup JFrog CLI
  # You may pin to the exact commit or the version.
  # uses: jfrog/setup-jfrog-cli@12a27f0b480ae11a2a2966d1ad5776c355409285
  uses: jfrog/setup-jfrog-cli@v1.1.1
  with:
    # JFrog CLI Version
    version: # optional, default is 1.44.0
    - name: Setup Ruby, JRuby and TruffleRuby
  # You may pin to the exact commit or the version.
  # uses: ruby/setup-ruby@dddacd7ec16cae1a8190380a744ef47cb2aa0bed
  uses: ruby/setup-ruby@v1.66.1
  with:
    # Engine and version to use, see the syntax in the README. Reads from .ruby-version or .tool-versions if unset.
    ruby-version: # optional, default is default
    # The version of Bundler to install. Either 'none', 'latest', 'Gemfile.lock', or a version number (e.g., 1, 2, 2.1.4).
For 'Gemfile.lock', the version is determined based on the BUNDLED WITH section from the file Gemfile.lock, $BUNDLE_GEMFILE.lock or gems.locked.
Defaults to 'Gemfile.lock' if the file exists and 'latest' otherwise.

    bundler: # optional, default is default
    # Run "bundle install", and cache the result automatically. Either true or false.
    bundler-cache: # optional, default is false
    # The working directory to use for resolving paths for .ruby-version, .tool-versions and Gemfile.lock.
    working-directory: # optional, default is .
    - name: Synopsys Intelligent Security Scan
  # You may pin to the exact commit or the version.
  # uses: synopsys-sig/intelligent-security-scan@48eedfcd42bc342a294dc495ac452797b2d9ff08
  uses: synopsys-sig/intelligent-security-scan@v1
  with:
    # The server Host URL for Intelligent Scan Engine eg http://localhost:1111 or https://21b7.ngrok.io
    ioServerUrl: # default is http://localhost:9090
    # The server password for Intelligent Scan Engine
    ioServerToken: # optional, default is 
    # HTTP URL to download IO Manifest file synopsys-io.yml
    ioManifestUrl: # optional
    # The server Host URL for Intelligent Scan Workflow Engine eg http://localhost:1111 or https://21b7.ngrok.io
    workflowServerUrl: # default is http://localhost:9091
    # The workflow jar version to retrieve for Intelligent Scan Engine
    workflowVersion: # optional, default is 2021.01
    # Additional arguments required for workflow engine arguments
    additionalWorkflowArgs: 
    # Additional arguments required for workflow engine arguments
    stage: # default is IO
    - name: "Configure AWS Credentials" Action For GitHub Actions
  # You may pin to the exact commit or the version.
  # uses: aws-actions/configure-aws-credentials@cefc5912bc61e2b5a3b049c839fc283c7712d4e0
  uses: aws-actions/configure-aws-credentials@v1
  with:
    # AWS Access Key ID. This input is required if running in the GitHub hosted environment. It is optional if running in a self-hosted environment that already has AWS credentials, for example on an EC2 instance.
    aws-access-key-id: # optional
    # AWS Secret Access Key. This input is required if running in the GitHub hosted environment. It is optional if running in a self-hosted environment that already has AWS credentials, for example on an EC2 instance.
    aws-secret-access-key: # optional
    # AWS Session Token
    aws-session-token: # optional
    # AWS Region, e.g. us-east-2
    aws-region: 
    # Whether to set the AWS account ID for these credentials as a secret value, so that it is masked in logs. Valid values are 'true' and 'false'. Defaults to true
    mask-aws-account-id: # optional
    # Use the provided credentials to assume an IAM role and configure the Actions environment with the assumed role credentials rather than with the provided credentials
    role-to-assume: # optional
    # Role duration in seconds (default: 6 hours)
    role-duration-seconds: # optional
    # Role session name (default: GitHubActions)
    role-session-name: # optional
    # The external ID of the role to assume
    role-external-id: # optional
    # Skip session tagging during role assumption
    role-skip-session-tagging: # optional
    - name: StackHawk HawkScan Action
  # You may pin to the exact commit or the version.
  # uses: stackhawk/hawkscan-action@a9ac3a0d17dab78959eca248e4f8f2d92db312be
  uses: stackhawk/hawkscan-action@v1.2.1
  with:
    # StackHawk API key
    apiKey: 
    # If set to `true`, show HawkScan commands, but don't run them
    dryRun: # optional
    # Space-separated list of environment variables to pass to HawkScan
    environmentVariables: # optional
    # Space-separated list of HawkScan configuration files to use
    configurationFiles: # optional, default is stackhawk.yml
    # Docker network type or bridge name to use for scan
    network: # optional, default is host
    # HawkScan Docker image to use
    image: # optional, default is stackhawk/hawkscan
    # HawkScan Docker image version to use
    version: # optional, default is latest
    - name: Create secret in Kubernetes cluster
  uses: Azure/k8s-create-secret@v1.1
  with:
    # Choose the target Kubernetes namespace. If the namespace is not provided, the commands will run in the default namespace.
    namespace: # optional
    # Container registry url
    container-registry-url: # optional
    # Container registry username
    container-registry-username: # optional
    # Container registry password
    container-registry-password: # optional
    # Container registry email
    container-registry-email: # optional
    # Type of Kubernetes secret. For example, docker-registry or generic
    secret-type: # default is docker-registry
    # Name of the secret. You can use this secret name in the Kubernetes YAML configuration file.
    secret-name: 
    # Specify keys and literal values to insert in generic type secret.For example, --from-literal=key1=value1 --from-literal=key2="top secret".
    arguments: # optional
    - name: oc-new-app
  # You may pin to the exact commit or the version.
  # uses: redhat-actions/oc-new-app@5282879480919c718a8c9d514e6f12bd42f06c7b
  uses: redhat-actions/oc-new-app@v1
  with:
    # Name to use for generated application artifacts
    app_name: 
    # The name (reference) of the image to create deployment
    image: 
    # The OpenShift project/Kubernetes namespace to deploy to. Defaults to current context's.
    namespace: # optional
    # The port to use for the application
    port: # optional
    - name: Await Taktile Deployment
  # You may pin to the exact commit or the version.
  # uses: taktile-org/await-taktile-deployment-action@a4fc46fe2d0d4ef6dc52ed91edfd01f77a919783
  uses: taktile-org/await-taktile-deployment-action@v0.0.3
  with:
    # Your Taktile API key
    TKTL_API_KEY: 
